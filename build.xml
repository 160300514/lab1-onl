<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="lab1">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="9"/>
    <property name="source" value="9"/>
    <path id="lab1.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <path id="run.MagicSquare.classpath">
        <path refid="lab1.classpath"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <path id="run.RulesOf6005Test.classpath">
        <path refid="lab1.classpath"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <path id="run.TurtleSoupTest.classpath">
        <path refid="lab1.classpath"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <path id="run.TurtleSoup.classpath">
        <path refid="lab1.classpath"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <path id="run.FriendshipGraphTest.classpath">
        <path refid="lab1.classpath"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <path id="run.Main.classpath">
        <path refid="lab1.classpath"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <path id="run.ExtractTest.classpath">
        <path refid="lab1.classpath"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <path id="run.FilterTest.classpath">
        <path refid="lab1.classpath"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <path id="run.MySocialNetworkTest.classpath">
        <path refid="lab1.classpath"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <path id="run.SocialNetworkTest.classpath">
        <path refid="lab1.classpath"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/javax.json-1.0.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="lab1.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="MagicSquare">
        <java classname="src.P1.MagicSquare" failonerror="true" fork="yes">
            <classpath refid="run.MagicSquare.classpath"/>
        </java>
    </target>
    <target name="RulesOf6005Test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="src.P2.rules.RulesOf6005Test" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.RulesOf6005Test.classpath"/>
        </junit>
    </target>
    <target name="TurtleSoupTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="src.P2.turtle.TurtleSoupTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.TurtleSoupTest.classpath"/>
        </junit>
    </target>
    <target name="TurtleSoup">
        <java classname="src.P2.turtle.TurtleSoup" failonerror="true" fork="yes">
            <classpath refid="run.TurtleSoup.classpath"/>
        </java>
    </target>
    <target name="FriendshipGraphTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.P3.FriendshipGraphTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FriendshipGraphTest.classpath"/>
        </junit>
    </target>
    <target name="Main">
        <java classname="src.P4.twitter.Main" failonerror="true" fork="yes">
            <classpath refid="run.Main.classpath"/>
        </java>
    </target>
    <target name="ExtractTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.P4.ExtractTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.ExtractTest.classpath"/>
        </junit>
    </target>
    <target name="FilterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.P4.FilterTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.FilterTest.classpath"/>
        </junit>
    </target>
    <target name="MySocialNetworkTest">
        <java classname="test.P4.MySocialNetworkTest" failonerror="true" fork="yes">
            <classpath refid="run.MySocialNetworkTest.classpath"/>
        </java>
    </target>
    <target name="SocialNetworkTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.P4.SocialNetworkTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.SocialNetworkTest.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
